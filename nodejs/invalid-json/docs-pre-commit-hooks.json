
[
    {"id": "hook1", "name": "Check Python", "entry": "python -m flake8", "language": "python"},
    {"id": "hook2", "name": "Run Tests", "entry": "pytest", "language": "python", "stages": ["commit"]},
    {"id": "hook3", "name": "Lint JavaScript", "entry": "eslint .", "language": "node", "always_run": true},
    {"id": "hook4", "name": "Compile TypeScript", "entry": "tsc", "language": "node", "args": ["--noEmit"]},
    {"id": "hook5", "name": "Format Markdown", "entry": "markdownlint", "language": "ruby", "verbose": true},
    {"id": "hook6", "name": "Check Spelling", "entry": "codespell", "language": "python"},
    {"id": "hook7", "name": "Build Project", "entry": "make", "language": "shell", "types": ["Makefile"]},
    {"id": "hook8", "name": "Run Black", "entry": "black .", "language": "python", "pass_filenames": false},
    {"id": "hook9", "name": "Image Optimization", "entry": "imagemin", "language": "node"},
    {"id": "hook10", "name": "Check Dependencies", "entry": "npm audit", "language": "node", "exclude": "^node_modules$"},
    {"id": "hook11", "name": "Python 3 Linter", "entry": "flake8 --max-line-length=100", "language": "python3"},
    {"id": "hook12", "name": "Run Tests in Parallel", "entry": "pytest -n auto", "language": "python", "require_serial": false},
    {"id": "hook13", "name": "Check YAML", "entry": "yamllint", "language": "python"},
    {"id": "hook14", "name": "Prettier Format", "entry": "prettier --check", "language": "node"},
    {"id": "hook15", "name": "Check for TODOs", "entry": "grep -r 'TODO'", "language": "bash"},
    {"id": "hook16", "name": "Ruby Style Check", "entry": "rubocop", "language": "ruby"},
    {"id": "hook17", "name": "JavaScript Formatter", "entry": "eslint --fix", "language": "node"},
    {"id": "hook18", "name": "Ensure Tests Pass", "entry": "pytest", "language": "python", "always_run": true},
    {"id": "hook19", "name": "Compile SCSS", "entry": "sass input.scss output.css", "language": "sass"},
    {"id": "hook20", "name": "Check for Security Issues", "entry": "bandit -r .", "language": "python"},
    {"id": "hook21", "name": "Format Python Code", "entry": "autopep8 --in-place", "language": "python", "verbose": true},
    {"id": "hook22", "name": "Run Tests with Coverage", "entry": "pytest --cov", "language": "python"},
    {"id": "hook23", "name": "Build Docker Image", "entry": "docker build .", "language": "docker"},
    {"id": "hook24", "name": "Java Checkstyle", "entry": "checkstyle", "language": "java"},
    {"id": "hook25", "name": "Check Gemfile", "entry": "bundle check", "language": "ruby"},
    {"id": "hook26", "name": "Run ESLint", "entry": "eslint .", "language": "node", "fail_fast": true},
    {"id": "hook27", "name": "Validate XML", "entry": "xmllint --noout", "language": "xml"},
    {"id": "hook28", "name": "Run SQL Lint", "entry": "sql-lint", "language": "python"},
    {"id": "hook29", "name": "Compiled Haskell", "entry": "ghc -o output main.hs", "language": "haskell"},
    {"id": "hook30", "name": "Check for AADLs", "entry": "aadl-lint", "language": "ada"},
    {"id": "hook31", "name": "JavaScript Test", "entry": "jest", "language": "node"},
    {"id": "hook32", "name": "Validate JSON", "entry": "ajv validate", "language": "node"},
    {"id": "hook33", "name": "Simple Hook", "entry": "echo Hello World", "language": "bash"},
    {"id": "hook34", "name": "Empty Hook", "entry": "", "language": "bash"},
    {"id": "hook35", "name": "Custom Check", "entry": "sh check.sh", "language": "shell", "args": ["--verbose"]},
    {"id": "hook36", "name": "Check FastAPI", "entry": "uvicorn main:app --reload", "language": "python"},
    {"id": "hook37", "name": "Detect Trailing Whitespace", "entry": "grep -r -n '[[:blank:]]$'", "language": "bash"},
    {"id": "hook38", "name": "Python 2.7 Check", "entry": "python2 my_script.py", "language": "python2"},
    {"id": "hook39", "name": "Rust Build", "entry": "cargo build", "language": "rust"},
    {"id": "hook40", "name": "Go Build", "entry": "go build -v", "language": "go"},
    {"id": "hook41", "name": "Nim Check", "entry": "nim c -d:nodejs myscript.nim", "language": "nim"},
    {"id": "hook42", "name": "Pre-Commit Test", "entry": "echo 'Running Pre-Commit'", "language": "bash"},
    {"id": "hook43", "name": "Run Dart Tests", "entry": "dart test", "language": "dart"},
    {"id": "hook44", "name": "PHP Linter", "entry": "php -l myfile.php", "language": "php"},
    {"id": "hook45", "name": "Check CSS", "entry": "stylelint **/*.css", "language": "node"},
    {"id": "hook46", "name": "Check All Formats", "entry": "mylinter", "language": "python", "types": ["python", "javascript"]},
    {"id": "hook47", "name": "Check .env Files", "entry": "dotenv-linter", "language": "go"},
    {"id": "hook48", "name": "Sanity Check", "entry": "echo 'Sanity Check Passed'", "language": "bash"},
    {"id": "hook49", "name": "Generate Documentation", "entry": "sphinx-build -b html source build", "language": "python"},
    {"id": "hook50", "name": "Check Configuration File", "entry": "toml-lint", "language": "python"},
    {"id": "hook51", "name": "Compile LESS", "entry": "lessc styles.less styles.css", "language": "less"},
    {"id": "hook52", "name": "Run R Script", "entry": "Rscript myscript.R", "language": "r"},
    {"id": "hook53", "name": "Run Haskell Tests", "entry": "cabal test", "language": "haskell"},
    {"id": "hook54", "name": "Go Vet", "entry": "go vet ./...", "language": "go"},
    {"id": "hook55", "name": "Terraform Lint", "entry": "terraform validate", "language": "terraform"},
    {"id": "hook56", "name": "Node Version Check", "entry": "node -v", "language": "node"},
    {"id": "hook57", "name": "Check Unused Dependencies", "entry": "depcheck", "language": "node"},
    {"id": "hook58", "name": "Check for Deprecated Packages", "entry": "npm outdated", "language": "node"},
    {"id": "hook59", "name": "Compile Swift", "entry": "swift build", "language": "swift"},
    {"id": "hook60", "name": "Run Go Tests", "entry": "go test", "language": "go"},
    {"id": "hook61", "name": "Check for Long Lines", "entry": "grep -E -n '\.{80,}'", "language": "bash"},
    {"id": "hook62", "name": "Run SQL Migration", "entry": "db-migrate up", "language": "node"},
    {"id": "hook63", "name": "Verify HTML", "entry": "htmlhint", "language": "node"},
    {"id": "hook64", "name": "Print Version", "entry": "echo $VERSION", "language": "bash"},
    {"id": "hook65", "name": "Validate CSV files", "entry": "csv-validator", "language": "node"},
    {"id": "hook66", "name": "Check for Broken Links", "entry": "broken-link-checker", "language": "node"},
    {"id": "hook67", "name": "Run Code Coverage", "entry": "nyc npm test", "language": "node"},
    {"id": "hook68", "name": "Check for Abundant Refs", "entry": "grep -n '#'", "language": "bash"},
    {"id": "hook69", "name": "PDF Validation", "entry": "pdfvalidator", "language": "python"},
    {"id": "hook70", "name": "Run Kotlin Tests", "entry": "gradle test", "language": "kotlin"},
    {"id": "hook71", "name": "Check Fish Script", "entry": "fish -n myscript.fish", "language": "fish"},
    {"id": "hook72", "name": "Run Elm", "entry": "elm make src/Main.elm --output=main.js", "language": "elm"},
    {"id": "hook73", "name": "Check for Large Files", "entry": "find . -size +1M", "language": "bash"},
    {"id": "hook74", "name": "Run Objective-C Tests", "entry": "xcodebuild test", "language": "objective-c"},
    {"id": "hook75", "name": "Check for Mixed Spaces and Tabs", "entry": "grep -n '[\t ]' *.py", "language": "bash"},
    {"id": "hook76", "name": "Check for Adblockers", "entry": "test-adblock", "language": "bash"},
    {"id": "hook77", "name": "Run Deno", "entry": "deno run myscript.ts", "language": "deno"},
    {"id": "hook78", "name": "Validate INI files", "entry": "inilint", "language": "python"},
    {"id": "hook79", "name": "Validate Protocol Buffers", "entry": "protoc --lint_out=.", "language": "protos"},
    {"id": "hook80", "name": "Check for Figlet Files", "entry": "figlet check", "language": "figlet"},
    {"id": "hook81", "name": "PHP Unit Test", "entry": "phpunit", "language": "php"},
    {"id": "hook82", "name": "Ensure Clean Build", "entry": "make clean", "language": "bash"},
    {"id": "hook83", "name": "Check Ansible Playbooks", "entry": "ansible-lint", "language": "python"},
    {"id": "hook84", "name": "Check for Code Quality", "entry": "sonarlint", "language": "java"},
    {"id": "hook85", "name": "Check TypeScript Types", "entry": "tsc --noEmit", "language": "node"},
    {"id": "hook86", "name": "Run Python Docs", "entry": "pydoc -w mymodule", "language": "python"},
    {"id": "hook87", "name": "Check XML Linting", "entry": "xmllint --noout myfile.xml", "language": "xml"},
    {"id": "hook88", "name": "Check Binary Files", "entry": "checkbinary", "language": "bash"},
    {"id": "hook89", "name": "Check for Duplicate Libraries", "entry": "npm dedupe", "language": "node"},
    {"id": "hook90", "name": "Check for Environmental Variables", "entry": "envcheck", "language": "bash"},
    {"id": "hook91", "name": "Check for Module Exports", "entry": "check-mod.exports", "language": "javascript"},
    {"id": "hook92", "name": "Check Markdown Format", "entry": "markdownlint .", "language": "node"},
    {"id": "hook93", "name": "Check for HTML Validity", "entry": "html-validator", "language": "node"},
    {"id": "hook94", "name": "Check Security Breaches", "entry": "securitycheck", "language": "bash"},
    {"id": "hook95", "name": "Ensure File Permissions", "entry": "check-permissions", "language": "bash"},
    {"id": "hook96", "name": "Check for Deprecated JavaScript", "entry": "eslint --deprecated", "language": "node"},
    {"id": "hook97", "name": "Check for CSS Specificity", "entry": "stylelint", "language": "node"},
    {"id": "hook98", "name": "Verify Type Hints", "entry": "mypy", "language": "python"},
    {"id": "hook99", "name": "Check Ruby Gems", "entry": "bundle outdated", "language": "ruby"},
    {"id": "hook100", "name": "Ruby Function Check", "entry": "rake test", "language": "ruby"}
]

[
    {"id": "hook1", "name": "Lint Python", "entry": "flake8", "language": "python"},
    {"id": "hook2", "name": "Check Formatting", "entry": "black .", "language": "python", "always_run": true},
    {"id": "hook3", "name": "Run Tests", "entry": "pytest", "language": "python", "types": ["python"], "stages": ["commit", "push"]},
    {"id": "hook4", "name": "Run JS Lint", "entry": "eslint .", "language": "node", "files": "*.js"},
    {"id": "hook5", "name": "Build Docker Image", "entry": "docker build .", "language": "docker"},
    {"id": "hook6", "name": "Check Gemfile", "entry": "bundler check", "language": "ruby"},
    {"id": "hook7", "name": "Compile TypeScript", "entry": "tsc", "language": "typescript"},
    {"id": "hook8", "name": "Run SQL Migration", "entry": "flyway migrate", "language": "sql"},
    {"id": "hook9", "name": "Run Shell Script", "entry": "sh scripts/deploy.sh", "language": "shell"},
    {"id": "hook10", "name": "Check YAML Syntax", "entry": "yamllint", "language": "yaml"},
    {"id": "hook11", "name": "Format Markdown", "entry": "markdownlint", "language": "markdown"},
    {"id": "hook12", "name": "Validate JSON", "entry": "ajv validate", "language": "javascript"},
    {"id": "hook13", "name": "Test Go Code", "entry": "go test ./...", "language": "golang"},
    {"id": "hook14", "name": "Run PHP Code Sniffer", "entry": "phpcs", "language": "php"},
    {"id": "hook15", "name": "Run Perl Script", "entry": "perl script.pl", "language": "perl"},
    {"id": "hook16", "name": "Compile C#", "entry": "dotnet build", "language": "dotnet"},
    {"id": "hook17", "name": "Check Poetry Dependencies", "entry": "poetry check", "language": "python"},
    {"id": "hook18", "name": "Run Docker Tests", "entry": "docker-compose -f docker-compose.test.yml up", "language": "docker"},
    {"id": "hook19", "name": "Validate HTML", "entry": "html-validator", "language": "html"},
    {"id": "hook20", "name": "Compile Haskell", "entry": "ghc Main.hs", "language": "haskell"},
    {"id": "hook21", "name": "Check Bash Scripts", "entry": "shellcheck", "language": "bash"},
    {"id": "hook22", "name": "Tailwind Compilation", "entry": "tailwindcss build", "language": "javascript"},
    {"id": "hook23", "name": "Run Java Tests", "entry": "mvn test", "language": "java"},
    {"id": "hook24", "name": "Linter for C Files", "entry": "cppcheck", "language": "c"},
    {"id": "hook25", "name": "Check LaTeX", "entry": "latexmk -pdf", "language": "latex"},
    {"id": "hook26", "name": "Static Analysis for Rust", "entry": "cargo clippy", "language": "rust"},
    {"id": "hook27", "name": "Check for Unused Variables", "entry": "eslint --no-ignore", "language": "javascript"},
    {"id": "hook28", "name": "Minify CSS", "entry": "cssnano", "language": "css"},
    {"id": "hook29", "name": "Run Pylint", "entry": "pylint", "language": "python"},
    {"id": "hook30", "name": "Collect Coverage", "entry": "pytest --cov", "language": "python"},
    {"id": "hook31", "name": "Deploy to Heroku", "entry": "git push heroku main", "language": "git"},
    {"id": "hook32", "name": "Check Image Size", "entry": "image-size-check", "language": "web"},
    {"id": "hook33", "name": "Build JavaScript", "entry": "webpack", "language": "javascript"},
    {"id": "hook34", "name": "Run Gherkin Tests", "entry": "cucumber", "language": "javascript"},
    {"id": "hook35", "name": "Validate CSV Format", "entry": "csvlint", "language": "csv"},
    {"id": "hook36", "name": "Run Shell Unit Tests", "entry": "bats tests/*.bats", "language": "bash"},
    {"id": "hook37", "name": "Check for ESLint Errors", "entry": "eslint .", "language": "javascript"},
    {"id": "hook38", "name": "Git Commit Hooks", "entry": "pre-commit run", "language": "git"},
    {"id": "hook39", "name": "Python Deprecated", "entry": "python -m deprecated.check", "language": "python"},
    {"id": "hook40", "name": "Test with Jest", "entry": "jest", "language": "javascript"},
    {"id": "hook41", "name": "Ensure Node Modules Are Up to Date", "entry": "npm install", "language": "node"},
    {"id": "hook42", "name": "Run RuboCop", "entry": "rubocop", "language": "ruby"},
    {"id": "hook43", "name": "Purge Unused CSS", "entry": "purgecss", "language": "javascript"},
    {"id": "hook44", "name": "Run Shell Coverage Tests", "entry": "bashcov", "language": "bash"},
    {"id": "hook45", "name": "Deploy to AWS", "entry": "aws s3 sync", "language": "aws"},
    {"id": "hook46", "name": "Check PEP8 Compliance", "entry": "pycodestyle", "language": "python"},
    {"id": "hook47", "name": "Run C++ Tests", "entry": "g++ -o test Program.cpp && ./test", "language": "c++"},
    {"id": "hook48", "name": "Generate TypeScript Definitions", "entry": "tsc --declaration", "language": "typescript"},
    {"id": "hook49", "name": "Check for Secret Keys", "entry": "detect-secrets scan", "language": "python"},
    {"id": "hook50", "name": "Check for TODOs", "entry": "grep -r TODO .", "language": "shell"},
    {"id": "hook51", "name": "Run Code Coverage", "entry": "codecov", "language": "shell"},
    {"id": "hook52", "name": "Build Swift Package", "entry": "swift build", "language": "swift"},
    {"id": "hook53", "name": "Ensure Python Requirements Are Installed", "entry": "pip install -r requirements.txt", "language": "python"},
    {"id": "hook54", "name": "Run SwiftLint", "entry": "swiftlint", "language": "swift"},
    {"id": "hook55", "name": "Ensure No Merge Conflicts", "entry": "git diff --merge", "language": "git"},
    {"id": "hook56", "name": "Format Java Code", "entry": "google-java-format", "language": "java"},
    {"id": "hook57", "name": "Check Jupyter Notebook", "entry": "nbconvert --execute", "language": "jupyter"},
    {"id": "hook58", "name": "Check for Common Security Issues", "entry": "bandit -r .", "language": "python"},
    {"id": "hook59", "name": "Check for Dead Code", "entry": "deadcode", "language": "golang"},
    {"id": "hook60", "name": "Optimize Images", "entry": "imagemin -o output/ input/", "language": "imagemin"},
    {"id": "hook61", "name": "HTML Tidy", "entry": "tidy -q -e", "language": "html"},
    {"id": "hook62", "name": "Check Python Security", "entry": "bandit", "language": "python"},
    {"id": "hook63", "name": "Check for Unused Dependencies", "entry": "depcheck", "language": "javascript"},
    {"id": "hook64", "name": "Format JSON", "entry": "jq .", "language": "json"},
    {"id": "hook65", "name": "Validate XML", "entry": "xmllint --noout", "language": "xml"},
    {"id": "hook66", "name": "Run Shell Tests", "entry": "shunit2", "language": "bash"},
    {"id": "hook67", "name": "Run Lint on Svelte", "entry": "svelte-check", "language": "svelte"},
    {"id": "hook68", "name": "Python Type Checking", "entry": "mypy", "language": "python"},
    {"id": "hook69", "name": "Run Tests in Docker", "entry": "docker-compose run tests", "language": "docker"},
    {"id": "hook70", "name": "Validate Go Modules", "entry": "go mod tidy", "language": "golang"},
    {"id": "hook71", "name": "Node Build", "entry": "npm run build", "language": "node"},
    {"id": "hook72", "name": "Ensure JDK Version", "entry": "javac --version", "language": "java"},
    {"id": "hook73", "name": "Run BibTeX", "entry": "bibtex", "language": "latex"},
    {"id": "hook74", "name": "Run Code Coverage for Rust", "entry": "cargo tarpaulin", "language": "rust"},
    {"id": "hook75", "name": "GitHub Actions Linter", "entry": "github-action-lint", "language": "github"},
    {"id": "hook76", "name": "Check for Missing Assets", "entry": "find . -name '*.html' -exec assetchecker {} \;", "language": "html"},
    {"id": "hook77", "name": "Run TypeScript Tests", "entry": "ts-jest", "language": "typescript"},
    {"id": "hook78", "name": "Run Snowpack", "entry": "snowpack build", "language": "javascript"},
    {"id": "hook79", "name": "Ensure No Duplicate Imports", "entry": "no-duplicate-imports", "language": "javascript"},
    {"id": "hook80", "name": "Optimize Python Asset", "entry": "python -m compileall", "language": "python"},
    {"id": "hook81", "name": "Check for Mixed Line Endings", "entry": "line-ending-check", "language": "shell"},
    {"id": "hook82", "name": "Run RSpec", "entry": "rspec", "language": "ruby"},
    {"id": "hook83", "name": "Run Tests for Go", "entry": "go test ./...", "language": "golang"},
    {"id": "hook84", "name": "Compile C Code", "entry": "gcc source.c -o binary", "language": "c"},
    {"id": "hook85", "name": "Run NPM Audit", "entry": "npm audit", "language": "node"},
    {"id": "hook86", "name": "Run Sphinx Documentation", "entry": "make html", "language": "documentation"},
    {"id": "hook87", "name": "Run CSSLint", "entry": "csslint", "language": "css"},
    {"id": "hook88", "name": "Check For Large Files", "entry": "find . -size +10M", "language": "shell"},
    {"id": "hook89", "name": "Check for .env File", "entry": "test -f .env", "language": "shell"},
    {"id": "hook90", "name": "Run Prettier", "entry": "prettier --check .", "language": "javascript"},
    {"id": "hook91", "name": "Validate Configuration Files", "entry": "ansible-lint", "language": "ansible"},
    {"id": "hook92", "name": "Compile Swift Code", "entry": "swiftc main.swift", "language": "swift"},
    {"id": "hook93", "name": "Check for Deprecated Code", "entry": "deprecator check", "language": "generic"},
    {"id": "hook94", "name": "Run PHP Unit Tests", "entry": "phpunit", "language": "php"},
    {"id": "hook95", "name": "Format C# Code", "entry": "dotnet format", "language": "c#"},
    {"id": "hook96", "name": "Check File Encoding", "entry": "file -i .", "language": "file"},
    {"id": "hook97", "name": "Run Security Audit", "entry": "snyk test", "language": "javascript"},
    {"id": "hook98", "name": "Run pyflakes", "entry": "pyflakes", "language": "python"},
    {"id": "hook99", "name": "Check for License File", "entry": "test -f LICENSE", "language": "shell"},
    {"id": "hook100", "name": "Check for JUnit Tests", "entry": "mvn test", "language": "java"}
]

[
    {"id": "hook1", "name": "Prettier", "entry": "prettier --check", "language": "npm", "files": "*.js"},
    {"id": "hook2", "name": "Flake8", "entry": "flake8", "language": "python", "always_run": true},
    {"id": "hook3", "name": "Black", "entry": "black", "language": "python", "types": ["python"]},
    {"id": "hook4", "name": "ESLint", "entry": "eslint .", "language": "node"},
    {"id": "hook5", "name": "Custom Script", "entry": "bash script.sh", "language": "script"},
    {"id": "hook6", "name": "RuboCop", "entry": "rubocop", "language": "ruby", "types": ["ruby"]},
    {"id": "hook7", "name": "Dart Formatter", "entry": "dart format", "language": "dart", "stages": ["commit", "push"]},
    {"id": "hook8", "name": "Terraform Validate", "entry": "terraform validate", "language": "terraform"},
    {"id": "hook9", "name": "PHPCS", "entry": "phpcs", "language": "php"},
    {"id": "hook10", "name": "SQL Lint", "entry": "sql-lint", "language": "sql"},
    {"id": "hook11", "name": "Dockerfile Linter", "entry": "hadolint Dockerfile", "language": "docker"},
    {"id": "hook12", "name": "Pre-Commit Hook", "entry": "pre-commit run --all-files", "language": "system"},
    {"id": "hook13", "name": "Markdown Lint", "entry": "markdownlint", "language": "markdown"},
    {"id": "hook14", "name": "ShellCheck", "entry": "shellcheck", "language": "shell"},
    {"id": "hook15", "name": "YAML Lint", "entry": "yamllint", "language": "yaml"},
    {"id": "hook16", "name": "Swift Format", "entry": "swiftformat", "language": "swift"},
    {"id": "hook17", "name": "Rust Clippy", "entry": "cargo clippy", "language": "rust"},
    {"id": "hook18", "name": "Golang Test", "entry": "go test", "language": "golang"},
    {"id": "hook19", "name": "Haskell Format", "entry": "stylish-haskell", "language": "haskell"},
    {"id": "hook20", "name": "JSHint", "entry": "jshint", "language": "javascript"},
    {"id": "hook21", "name": "XML Linter", "entry": "xmllint", "language": "xml"},
    {"id": "hook22", "name": "JSON Lint", "entry": "jsonlint", "language": "json"},
    {"id": "hook23", "name": "SVG Optimizer", "entry": "svgo", "language": "svg"},
    {"id": "hook24", "name": "ICU Linter", "entry": "icu-lint", "language": "icu"},
    {"id": "hook25", "name": "Code Quality", "entry": "quality",
        "language": "python", "args": ["--verbose"], "minimum_pre_commit_version": "0.1.0"},
    {"id": "hook26", "name": "Pre-commit Bash", "entry": "echo 'Hello World'", "language": "bash"},
    {"id": "hook27", "name": "Node Tests", "entry": "npm test", "language": "node", "stages": ["commit"]},
    {"id": "hook28", "name": "Python Tests", "entry": "pytest", "language": "python", "stages": ["push"]},
    {"id": "hook29", "name": "Ruby Tests", "entry": "rspec", "language": "ruby", "stages": ["commit"]},
    {"id": "hook30", "name": "Custom Alias Hook", "entry": "echo test", "language": "bash", "alias": "test_alias"},
    {"id": "hook31", "name": "No Files", "entry": "echo test", "language": "bash", "files": "", "exclude": "^$"},
    {"id": "hook32", "name": "Edge Case Hook 1", "entry": "echo edge 1", "language": "bash", "exclude_types": ["json"]},
    {"id": "hook33", "name": "Edge Case Hook 2", "entry": "echo edge 2", "language": "bash", "pass_filenames": false},
    {"id": "hook34", "name": "Type Patterns Test", "entry": "echo test", "language": "bash", "types": ["css", "js"]},
    {"id": "hook35", "name": "Complex Hook", "entry": "npm run lint", "language": "node",
        "additional_dependencies": ["eslint-plugin-react", "eslint-config-airbnb"]},
    {"id": "hook36", "name": "Hook with Log", "entry": "echo log test", "language": "bash", "log_file": "/var/log/hook.log"},
    {"id": "hook37", "name": "Hook with Arguments", "entry": "flake8 --max-line-length=120", "language": "python", "args": ["--max-line-length=120"]},
    {"id": "hook38", "name": "Pre-commit with targets", "entry": "npm run build", "language": "node", "types": ["javascript", "json"]},
    {"id": "hook39", "name": "Complex Stage Hook", "entry": "echo complex", "language": "bash", "stages": ["commit", "push", "merge-commit"]},
    {"id": "hook40", "name": "Minimum version check", "entry": "echo version", "language": "bash", "minimum_pre_commit_version": "1.0.0"},
    {"id": "hook41", "name": "Always run hook", "entry": "echo always", "language": "bash", "always_run": true},
    {"id": "hook42", "name": "Fail Fast True", "entry": "echo fail fast", "language": "bash", "fail_fast": true},
    {"id": "hook43", "name": "Verbose Output", "entry": "echo verbose", "language": "bash", "verbose": true},
    {"id": "hook44", "name": "Duplicated Types", "entry": "validate", "language": "python", "types": ["yaml", "yaml"]},
    {"id": "hook45", "name": "Malformed JSON Hook", "entry": "echo malformed", "language": "bash", "files": "*"],
    {"id": "hook46", "name": "Empty Hooks", "entry": "", "language": "bash"},
    {"id": "hook47", "name": "Pre-push Job", "entry": "npm test", "language": "node", "stages": ["pre-push"]},
    {"id": "hook48", "name": "Circular Dependency Hook", "entry": "npm install", "language": "node", "additional_dependencies": ["hook48"]},
    {"id": "hook49", "name": "Single Char File Type", "entry": "echo a", "language": "bash", "types": ["a"]},
    {"id": "hook50", "name": "Max Length File Name", "entry": "echo maxlen", "language": "bash", "files": "a_very_long_filename_to_test_the_validations.txt"},
    {"id": "hook51", "name": "File Globbing Test", "entry": "echo globbing", "language": "bash", "files": "*.js"},
    {"id": "hook52", "name": "Long Description Hook", "entry": "echo long desc", "language": "python",
        "description": "This hook is intended to test how long a description can be without failing the schema."},
    {"id": "hook53", "name": "Empty Array Types", "entry": "echo empty", "language": "bash", "types": []},
    {"id": "hook54", "name": "Invalid Language", "entry": "echo invalid", "language": "invalid-lang"},
    {"id": "hook55", "name": "No Entry Point", "language": "bash"},
    {"id": "hook56", "name": "Empty Language", "entry": "echo empty lang", "language": ""},
    {"id": "hook57", "name": "Exclude All Types", "entry": "echo excluded", "language": "bash", "exclude_types": ["*"]},
    {"id": "hook58", "name": "No Stages Defined", "entry": "echo no stages", "language": "bash"},
    {"id": "hook59", "name": "Multiple Excludes", "entry": "echo multiple", "language": "bash", "exclude": "^$|^(.*).tmp$"},
    {"id": "hook60", "name": "Hook Without Required Fields", "entry": "echo missing", "language": "bash", "types": ["json"]},
    {"id": "hook61", "name": "String Entry With Arguments", "entry": "docker run --rm some-image", "language": "docker"},
    {"id": "hook62", "name": "Complex File Type Combination", "entry": "echo complex types", "language": "bash", "types": ["json", "yaml", "xml"]},
    {"id": "hook63", "name": "Hook With Alias Only", "language": "bash", "alias": "hook_alias"},
    {"id": "hook64", "name": "Numerical Arguments Hook", "entry": "echo numbers", "language": "bash", "args": ["1", "2", "3"]},
    {"id": "hook65", "name": "Two File Types", "entry": "echo two types", "language": "bash", "types": ["bash", "python"]},
    {"id": "hook66", "name": "Inconsistent Naming", "entry": "echo naming", "language": "bash", "alias": "hook66"},
    {"id": "hook67", "name": "Pre-commit Nested Hook", "entry": "echo nested", "language": "bash", "repository": {"id": "repo1"}},
    {"id": "hook68", "name": "Unknown Type for File", "entry": "echo unknown", "language": "bash", "types": ["unknown-type"]},
    {"id": "hook69", "name": "Hook with Commands", "entry": "echo command test", "language": "bash", "args": ["arg1", "arg2"]},
    {"id": "hook70", "name": "Auto-generated Hook", "entry": "echo auto", "language": "bash", "stage": "commit"},
    {"id": "hook71", "name": "Multiple Language Versions", "entry": "echo multi version", "language": "python", "language_version": "3.8"},
    {"id": "hook72", "name": "Redundant Properties", "entry": "echo redundant", "language": "bash", "files": "*.js", "exclude": ".*"},
    {"id": "hook73", "name": "Test Empty Hook", "entry": "", "language": "bash", "files": "*.yml"},
    {"id": "hook74", "name": "Conditionally Required Fields", "entry": "npm run check", "language": "node", "types": ["typescript"]},
    {"id": "hook75", "name": "Log with Stages", "entry": "echo log stages", "language": "bash", "log_file": "/var/log/stage.log", "stages": ["commit", "push"]},
    {"id": "hook76", "name": "Compatibility Hook", "entry": "echo compatibility", "language": "bash", "minimum_pre_commit_version": "1.0.0"},
    {"id": "hook77", "name": "Exploit Edge Case", "entry": "echo exploit", "language": "bash", "types": ["edge-case"]},
    {"id": "hook78", "name": "Docker Entry Point", "entry": "docker-compose up", "language": "docker"},
    {"id": "hook79", "name": "Multiline Arguments", "entry": "echo multi line", "language": "bash", "args": ["arg1\narg2\narg3"]},
    {"id": "hook80", "name": "YAML Parsing Test", "entry": "echo yaml", "language": "yaml"},
    {"id": "hook81", "name": "Extra Properties", "entry": "echo extra", "language": "bash", "extra_field": "value"},
    {"id": "hook82", "name": "Special Characters", "entry": "echo special!@#$", "language": "bash"},
    {"id": "hook83", "name": "Max File Size", "entry": "echo max file size", "language": "bash", "files": "large_file.txt"},
    {"id": "hook84", "name": "Single State Hook", "entry": "echo single state hook", "language": "bash", "stages": ["manual"]},
    {"id": "hook85", "name": "Repetitive Hooks", "entry": "echo repeat", "language": "bash", "file_types": ["bash", "bash"]},
    {"id": "hook86", "name": "Malformed Hook Structure", "language": "bash", "entry": {}},
    {"id": "hook87", "name": "Empty Hook without Required Fields", "language": "bash"},
    {"id": "hook88", "name": "Wrong File Types", "entry": "echo wrong", "language": "bash", "types": ["wrong_type"]},
    {"id": "hook89", "name": "Improper Hook Name", "entry": "echo improper", "language": "bash", "name": "1st-hook"},
    {"id": "hook90", "name": "Non-Executable Entry", "entry": "not_a_exec", "language": "bash"},
    {"id": "hook91", "name": "Simulated Error Condition", "entry": "exit 1", "language": "bash", "fail_fast": true},
    {"id": "hook92", "name": "Hook with Comments", "entry": "echo comment", "language": "bash", "description": "# This is a comment"},
    {"id": "hook93", "name": "Read-Only Git Hook", "entry": "echo read-only", "language": "bash", "files": "*.sh"},
    {"id": "hook94", "name": "Executable Files", "entry": "chmod +x file.sh", "language": "bash"},
    {"id": "hook95", "name": "Useless Hook Test", "entry": "echo useless", "language": "bash"},
    {"id": "hook96", "name": "Allow Duplicates", "entry": "echo allow dupes", "language": "bash", "types_or": ["json", "xml"]},
    {"id": "hook97", "name": "Unsupported Language", "entry": "echo unsupported", "language": "unsupported"},
    {"id": "hook98", "name": "Hidden Format Test", "entry": "echo hidden", "language": "bash", "files": ".*"},
    {"id": "hook99", "name": "Whitespace Trimming", "entry": "echo    spaces  ", "language": "bash"},
    {"id": "hook100", "name": "Unused Field Test", "entry": "echo unused", "language": "bash", "unused_field": "will not validate"}
]

[
    {"id": "hook1", "name": "Check Python Style", "entry": "flake8", "language": "python"},
    {"id": "hook2", "name": "Format Python Code", "entry": "black", "language": "python", "types": ["python"]},
    {"id": "hook3", "name": "Lint JavaScript", "entry": "eslint", "language": "node", "files": "*.js"},
    {"id": "hook4", "name": "Markdown Linting", "entry": "markdownlint", "language": "ruby", "stages": ["commit"]},
    {"id": "hook5", "name": "Shellcheck", "entry": "shellcheck", "language": "bash", "always_run": true},
    {"id": "hook6", "name": "Run Tests", "entry": "pytest", "language": "python", "stages": ["push"]},
    {"id": "hook7", "name": "Check for Dependencies", "entry": "npm audit", "language": "node"},
    {"id": "hook8", "name": "Ensure JSON Format", "entry": "ajv", "language": "node", "types": ["json"]},
    {"id": "hook9", "name": "Check for Unused Imports", "entry": "isort", "language": "python"},
    {"id": "hook10", "name": "C++ Compiler Check", "entry": "g++ -o myfile myfile.cpp", "language": "c++"},
    {"id": "hook11", "name": "Run Static Analysis", "entry": "golint", "language": "golang"},
    {"id": "hook12", "name": "Validate CloudFormation", "entry": "cfn-lint", "language": "python"},
    {"id": "hook13", "name": "Prettify HTML", "entry": "prettier --write", "language": "node"},
    {"id": "hook14", "name": "Ruby Syntax Check", "entry": "ruby -c", "language": "ruby"},
    {"id": "hook15", "name": "Check TypeScript Types", "entry": "tsc --noEmit", "language": "typescript"},
    {"id": "hook16", "name": "Check Dockerfile", "entry": "hadolint Dockerfile", "language": "docker"},
    {"id": "hook17", "name": "Validate XML", "entry": "xmllint --noout", "language": "bash"},
    {"id": "hook18", "name": "Check for Sensitive Info", "entry": "trufflehog", "language": "python", "stages": ["commit", "push"]},
    {"id": "hook19", "name": "Check for Large Files", "entry": "./check_large_files.sh", "language": "bash"},
    {"id": "hook20", "name": "Run Tests in Parallel", "entry": "pytest -n 4", "language": "python", "require_serial": true},
    {"id": "hook21", "name": "Check for TODOs", "entry": "grep -r 'TODO'", "language": "bash"},
    {"id": "hook22", "name": "Ensure .env is Correct", "entry": "dotenv-linter", "language": "go"},
    {"id": "hook23", "name": "NPM Audit Report", "entry": "npm audit --production", "language": "node"},
    {"id": "hook24", "name": "Compile C#", "entry": "dotnet build", "language": "dotnet"},
    {"id": "hook25", "name": "Pylint Check", "entry": "pylint", "language": "python"},
    {"id": "hook26", "name": "Check for Broken Links", "entry": "htmlproofer", "language": "ruby"},
    {"id": "hook27", "name": "Validate CSV Format", "entry": "csvlint", "language": "python"},
    {"id": "hook28", "name": "Ensure No Merge Conflicts", "entry": "git diff --check", "language": "bash"},
    {"id": "hook29", "name": "Validate SQL Queries", "entry": "sql-lint", "language": "node", "verbose": true},
    {"id": "hook30", "name": "Check File Types", "entry": "check_file_types.py", "language": "python"},
    {"id": "hook31", "name": "Git Hooks Check", "entry": "./check_git_hooks.sh", "language": "bash"},
    {"id": "hook32", "name": "Custom Pre-hook", "entry": "custom-hook.sh", "language": "bash", "pass_filenames": false},
    {"id": "hook33", "name": "Check PHP Syntax", "entry": "php -l", "language": "php"},
    {"id": "hook34", "name": "Check for Unused CSS", "entry": "purifycss", "language": "node"},
    {"id": "hook35", "name": "Run Go Tests", "entry": "go test ./...", "language": "golang"},
    {"id": "hook36", "name": "Check for Non-ASCII Characters", "entry": "grep -P '[^\x00-\x7F]+'", "language": "bash"},
    {"id": "hook37", "name": "Ensure Consistent Line Endings", "entry": "dos2unix", "language": "bash", "always_run": true},
    {"id": "hook38", "name": "Check for Deprecated Packages", "entry": "npm outdated", "language": "node"},
    {"id": "hook39", "name": "Check Markdown Links", "entry": "markdownlint -f", "language": "ruby"},
    {"id": "hook40", "name": "Run JSHint", "entry": "jshint", "language": "javascript"},
    {"id": "hook41", "name": "Check Java Code Style", "entry": "./checkstyle.sh", "language": "java"},
    {"id": "hook42", "name": "Validate HTML5", "entry": "html-validator", "language": "node"},
    {"id": "hook43", "name": "Run Tests with Coverage", "entry": "pytest --cov", "language": "python"},
    {"id": "hook44", "name": "Check Duplicate Files", "entry": "fdupes", "language": "bash"},
    {"id": "hook45", "name": "Ensure JSON Validity", "entry": "jsonlint", "language": "node", "types": ["json"]},
    {"id": "hook46", "name": "Super Linter", "entry": "github/super-linter", "language": "docker"},
    {"id": "hook47", "name": "Publish to NPM", "entry": "npm publish", "language": "node", "stages": ["push"]},
    {"id": "hook48", "name": "Ruby Gem Check", "entry": "bundle exec rubocop", "language": "ruby"},
    {"id": "hook49", "name": "Check Haskell Build", "entry": "cabal build", "language": "haskell"},
    {"id": "hook50", "name": "Run Security Audit", "entry": "npm audit --json", "language": "node"},
    {"id": "hook51", "name": "Validate LaTeX", "entry": "latexmk", "language": "latex"},
    {"id": "hook52", "name": "Ensure Compliance", "entry": "compliance-checker", "language": "python"},
    {"id": "hook53", "name": "Check for Trailing Spaces", "entry": "grep -q '[[:space:]]$'", "language": "bash"},
    {"id": "hook54", "name": "Eslint Check", "entry": "eslint .", "language": "javascript"},
    {"id": "hook55", "name": "Check YML Syntax", "entry": "yamllint", "language": "python"},
    {"id": "hook56", "name": "Check XML Validity", "entry": "xmllint --noout", "language": "bash"},
    {"id": "hook57", "name": "Validate SVG", "entry": "svgo", "language": "node"},
    {"id": "hook58", "name": "Check for Environment Variables", "entry": "check_env.py", "language": "python"},
    {"id": "hook59", "name": "Run Closure Linter", "entry": "closure-linter", "language": "javascript"},
    {"id": "hook60", "name": "Minify CSS", "entry": "cleancss", "language": "node"},
    {"id": "hook61", "name": "Format PHP Code", "entry": "php-cs-fixer fix", "language": "php"},
    {"id": "hook62", "name": "Prevent Large Commits", "entry": "check_large_commit.sh", "language": "bash"},
    {"id": "hook63", "name": "Check for Hardcoded Keys", "entry": "grep -r 'ACCESS_KEY'", "language": "bash"},
    {"id": "hook64", "name": "Check for Unsupported Modifications", "entry": "check_modifications.py", "language": "python"},
    {"id": "hook65", "name": "Rust Check", "entry": "cargo check", "language": "rust"},
    {"id": "hook66", "name": "Check HTML for Accessibility", "entry": "pa11y", "language": "node"},
    {"id": "hook67", "name": "Check for Open Issues", "entry": "gh issue list", "language": "bash"},
    {"id": "hook68", "name": "Check for Duplicate Code", "entry": "sonarqube", "language": "java"},
    {"id": "hook69", "name": "Validate PHP", "entry": "php -l", "language": "php"},
    {"id": "hook70", "name": "Check for SQL Injection Vulnerabilities", "entry": "sqlcheck", "language": "python"},
    {"id": "hook71", "name": "Check for Mixed Line Endings", "entry": "check_line_endings.py", "language": "python"},
    {"id": "hook72", "name": "Vue.js Linting", "entry": "eslint", "language": "node"},
    {"id": "hook73", "name": "Cucumber Test", "entry": "cucumber", "language": "ruby"},
    {"id": "hook74", "name": "Check for Hardcoded Secrets", "entry": "git-secrets", "language": "bash"},
    {"id": "hook75", "name": "Validate HTTP Requests", "entry": "httpie", "language": "python"},
    {"id": "hook76", "name": "Ensure Open API Compliance", "entry": "swagger-cli", "language": "node"},
    {"id": "hook77", "name": "Docker Health Check", "entry": "docker inspect", "language": "docker"},
    {"id": "hook78", "name": "Check for Commit Message Format", "entry": "validate_commit_message.sh", "language": "bash"},
    {"id": "hook79", "name": "Shell Script Syntax Check", "entry": "bash -n", "language": "bash"},
    {"id": "hook80", "name": "HTML Validator", "entry": "html-validator", "language": "node"},
    {"id": "hook81", "name": "Check for Sensitive File Types", "entry": "check_sensitive_files.py", "language": "python"},
    {"id": "hook82", "name": "Check Composer Dependencies", "entry": "composer validate", "language": "php"},
    {"id": "hook83", "name": "Terraform Linting", "entry": "terraform validate", "language": "terraform"},
    {"id": "hook84", "name": "Validate JSON Schema", "entry": "ajv", "language": "node"},
    {"id": "hook85", "name": "Check for Correct Class Names", "entry": "check_class_names.sh", "language": "bash"},
    {"id": "hook86", "name": "Validate Git Commit Hooks", "entry": "validate_hooks.py", "language": "python"},
    {"id": "hook87", "name": "Sass Linting", "entry": "sass-lint", "language": "node"},
    {"id": "hook88", "name": "Validate Markdown Files", "entry": "markdownlint", "language": "ruby"},
    {"id": "hook89", "name": "Check for Reserved Words", "entry": "grep -E '(TODO|FIXME|XXX)'", "language": "bash"},
    {"id": "hook90", "name": "Ensure Valid CSS", "entry": "stylelint", "language": "node"},
    {"id": "hook91", "name": "Check for Git Tags", "entry": "git tag", "language": "bash"},
    {"id": "hook92", "name": "Python Type Checking", "entry": "mypy", "language": "python"},
    {"id": "hook93", "name": "Ensure Valid Jupyter Notebooks", "entry": "nbstripout", "language": "python"},
    {"id": "hook94", "name": "Validate LaTeX Documents", "entry": "pdflatex", "language": "latex"},
    {"id": "hook95", "name": "Run C Tests", "entry": "make test", "language": "c"},
    {"id": "hook96", "name": "Ensure No TensorFlow Packages", "entry": "grep -r 'tensorflow'", "language": "python"},
    {"id": "hook97", "name": "JSON Formatter", "entry": "json-formatter", "language": "node"},
    {"id": "hook98", "name": "Check for Non-Influential Changes", "entry": "git diff --quiet", "language": "bash"},
    {"id": "hook99", "name": "Latex Check", "entry": "latex -check", "language": "latex"},
    {"id": "hook100", "name": "Security Scan", "entry": "bandit -r", "language": "python"}
]

[
    {"id": "hook1", "name": "Check Python Style", "entry": "flake8", "language": "python"},
    {"id": "hook2", "name": "Format Python Code", "entry": "black", "language": "python"},
    {"id": "hook3", "name": "Run Tests", "entry": "pytest", "language": "python", "stages": ["test"]},
    {"id": "hook4", "name": "Lint JavaScript", "entry": "eslint", "language": "node"},
    {"id": "hook5", "name": "Check JSON", "entry": "jsonlint", "language": "node"},
    {"id": "hook6", "name": "Run Shell Scripts", "entry": "sh", "language": "system", "args": ["script.sh"]},
    {"id": "hook7", "name": "Node Security Audit", "entry": "npm audit", "language": "node"},
    {"id": "hook8", "name": "Check for TODOs", "entry": "grep -r TODO .", "language": "bash"},
    {"id": "hook9", "name": "Custom Python Hook", "entry": "python custom_hook.py", "language": "python"},
    {"id": "hook10", "name": "Code Formatting", "entry": "prettier --write", "language": "javascript"},
    {"id": "hook11", "name": "Check Markdown", "entry": "markdownlint", "language": "node"},
    {"id": "hook12", "name": "Validate Git Config", "entry": "git config --list", "language": "shell"},
    {"id": "hook13", "name": "Run Docker Check", "entry": "docker-compose config", "language": "docker"},
    {"id": "hook14", "name": "Check HTML", "entry": "htmlhint", "language": "node"},
    {"id": "hook15", "name": "Python Requirements Check", "entry": "pip check", "language": "python"},
    {"id": "hook16", "name": "Run TypeScript Compiler", "entry": "tsc", "language": "node"},
    {"id": "hook17", "name": "Check YAML", "entry": "yamllint", "language": "python"},
    {"id": "hook18", "name": "Run Golang Tests", "entry": "go test", "language": "golang"},
    {"id": "hook19", "name": "Run Coverage Test", "entry": "pytest --cov", "language": "python"},
    {"id": "hook20", "name": "Docker Lint", "entry": "dockerfilelint", "language": "docker"},
    {"id": "hook21", "name": "Check C++ Code", "entry": "cppcheck", "language": "cpp"},
    {"id": "hook22", "name": "Ensure Readme Exists", "entry": "test -f README.md", "language": "bash"},
    {"id": "hook23", "name": "Check for Binary Files", "entry": "test -f *.bin", "language": "bash"},
    {"id": "hook24", "name": "Prettify JSON", "entry": "jq .", "language": "python"},
    {"id": "hook25", "name": "Check for Secret Keys", "entry": "grep 'SECRET=' .env", "language": "bash"},
    {"id": "hook26", "name": "Run Test Coverage", "entry": "pytest --cov", "language": "python", "always_run": true},
    {"id": "hook27", "name": "Run Composer Check", "entry": "composer validate", "language": "php"},
    {"id": "hook28", "name": "Check for Translation Strings", "entry": "xgettext", "language": "python"},
    {"id": "hook29", "name": "Run Compatibility Check", "entry": "check-compat", "language": "bash"},
    {"id": "hook30", "name": "Validate R Scripts", "entry": "Rscript -e 'source(\"script.R\")'", "language": "r"},
    {"id": "hook31", "name": "Check for Dependency Updates", "entry": "npm outdated", "language": "node"},
    {"id": "hook32", "name": "Check Tidy for HTML", "entry": "tidy -q -e", "language": "html"},
    {"id": "hook33", "name": "Run Linter for Go", "entry": "golint", "language": "golang"},
    {"id": "hook34", "name": "Check for Unused Variables", "entry": "eslint --unused-vars", "language": "javascript"},
    {"id": "hook35", "name": "Run Java Tests", "entry": "mvn test", "language": "java"},
    {"id": "hook36", "name": "Style Check for CSS", "entry": "stylelint", "language": "node"},
    {"id": "hook37", "name": "PHP Code Sniffer", "entry": "phpcs", "language": "php"},
    {"id": "hook38", "name": "Check for TODOs and FIXMEs", "entry": "grep -r 'TODO\\|FIXME'", "language": "bash"},
    {"id": "hook39", "name": "Validate XML Files", "entry": "xmllint", "language": "xml"},
    {"id": "hook40", "name": "Ensure Connection String is Present", "entry": "test -n \"$DATABASE_URL\"", "language": "bash"},
    {"id": "hook41", "name": "Validate Python Syntax", "entry": "python -m py_compile", "language": "python"},
    {"id": "hook42", "name": "Validate CSV Structure", "entry": "csvlint", "language": "node"},
    {"id": "hook43", "name": "Check for Each Stage", "entry": "echo 'Running during commit'", "language": "bash", "stages": ["commit", "push"]},
    {"id": "hook44", "name": "Compile Documentation", "entry": "make docs", "language": "make"},
    {"id": "hook45", "name": "Run Tests with Specific Args", "entry": "pytest -v", "language": "python", "args": ["--tb=short"]},
    {"id": "hook46", "name": "Run RSpec Tests", "entry": "rspec", "language": "ruby"},
    {"id": "hook47", "name": "Linter for Markdown Files", "entry": "markdownlint", "language": "node", "types": ["markdown"]},
    {"id": "hook48", "name": "CSS Format Check", "entry": "stylelint", "language": "node", "types_or": ["css", "scss"]},
    {"id": "hook49", "name": "NPM Install", "entry": "npm install", "language": "node", "always_run": true},
    {"id": "hook50", "name": "Pre-commit Test Stage", "entry": "echo 'Pre-commit checks'", "language": "bash", "stages": ["commit"]},
    {"id": "hook51", "name": "Check for Large Files", "entry": "find . -size +5M", "language": "bash"},
    {"id": "hook52", "name": "Verify License", "entry": "license-checker", "language": "node"},
    {"id": "hook53", "name": "JavaScript Type Check", "entry": "tsc --noEmit", "language": "node"},
    {"id": "hook54", "name": "Check for Missing License Files", "entry": "test -f LICENSE", "language": "bash"},
    {"id": "hook55", "name": "Run Shellcheck", "entry": "shellcheck *.sh", "language": "bash"},
    {"id": "hook56", "name": "Run Dependency Check for Java", "entry": "mvn dependency:tree", "language": "java"},
    {"id": "hook57", "name": "Jest Test Runner", "entry": "jest", "language": "javascript"},
    {"id": "hook58", "name": "Check for Deprecated Dependencies", "entry": "depcheck", "language": "node"},
    {"id": "hook59", "name": "Sync Database Schema", "entry": "python manage.py migrate", "language": "python"},
    {"id": "hook60", "name": "Check Notebooks", "entry": "nbstripout", "language": "python"},
    {"id": "hook61", "name": "File Existence Check", "entry": "test -f config.json", "language": "bash"},
    {"id": "hook62", "name": "Run Git Hooks", "entry": "git hooks", "language": "bash"},
    {"id": "hook63", "name": "Sass Compiler Check", "entry": "sass --check style.scss", "language": "sass"},
    {"id": "hook64", "name": "Custom Bash Hook", "entry": "bash custom_hook.sh", "language": "bash"},
    {"id": "hook65", "name": "Run Linting on Commits", "entry": "commit-linter", "language": "javascript"},
    {"id": "hook66", "name": "Run Sort on JSON Files", "entry": "jq --sort-keys .", "language": "python"},
    {"id": "hook67", "name": "Cross-Check for Non-UTF8", "entry": "grep -P -n '[^\x00-\x7F]'", "language": "bash"},
    {"id": "hook68", "name": "Validate Python Data Files", "entry": "pydatacheck data/*.json", "language": "python"},
    {"id": "hook69", "name": "Run React Tests", "entry": "react-scripts test", "language": "javascript"},
    {"id": "hook70", "name": "Check for Sensitive Files", "entry": "grep -lr '.env'", "language": "bash"},
    {"id": "hook71", "name": "Check for Circular Dependencies", "entry": "depcheck --specials=glob", "language": "node"},
    {"id": "hook72", "name": "Check for Orphaned Dependencies", "entry": "dep-check", "language": "python"},
    {"id": "hook73", "name": "Markdown Check for Structure", "entry": "markdoctest", "language": "node"},
    {"id": "hook74", "name": "Check for Encoding Issues", "entry": "iconv -f UTF-8", "language": "bash"},
    {"id": "hook75", "name": "Python Flake8 Style Checks", "entry": "flake8 .", "language": "python"},
    {"id": "hook76", "name": "Validate GraphQL Schemas", "entry": "graphql-schema-linter", "language": "node"},
    {"id": "hook77", "name": "Run Test Coverage", "entry": "coverage run -m pytest", "language": "python"},
    {"id": "hook78", "name": "Check for Broken Links", "entry": "linkchecker", "language": "python"},
    {"id": "hook79", "name": "Build YAML", "entry": "yarn build", "language": "javascript"},
    {"id": "hook80", "name": "Run Prettier", "entry": "prettier --check .", "language": "javascript"},
    {"id": "hook81", "name": "Check Untracked Files", "entry": "git ls-files --others --exclude-standard", "language": "bash"},
    {"id": "hook82", "name": "Check HTML Standards", "entry": "htmlhint .", "language": "node"},
    {"id": "hook83", "name": "Run ESLint Fixes", "entry": "eslint --fix .", "language": "javascript"},
    {"id": "hook84", "name": "Run Code Coverage Check", "entry": "nyc --reporter=text npm test", "language": "node"},
    {"id": "hook85", "name": "Check for React PropTypes", "entry": "propTypes", "language": "javascript"},
    {"id": "hook86", "name": "Check for Multiple Versions", "entry": "npm dedupe", "language": "node"},
    {"id": "hook87", "name": "Check for Interdependencies", "entry": "depgraph", "language": "node"},
    {"id": "hook88", "name": "Lookup for Obsolete Packages", "entry": "npm outdated", "language": "node"},
    {"id": "hook89", "name": "Compile SASS to CSS", "entry": "sass style.scss:style.css", "language": "sass"},
    {"id": "hook90", "name": "Ensure Code Coverage", "entry": "npm run coverage", "language": "node"},
    {"id": "hook91", "name": "Check Build Errors", "entry": "make build", "language": "make"},
    {"id": "hook92", "name": "Run Doxygen", "entry": "doxygen", "language": "bash"},
    {"id": "hook93", "name": "Check for Security Fixes", "entry": "npm audit fix", "language": "node"},
    {"id": "hook94", "name": "Check for TODOs", "entry": "grep -r TODO .", "language": "bash"},
    {"id": "hook95", "name": "Run Style CI", "entry": "styleci", "language": "php"},
    {"id": "hook96", "name": "Format Java Code", "entry": "java -jar google-java-format.jar", "language": "java"},
    {"id": "hook97", "name": "Check for Large Files", "entry": "find . -size +10M", "language": "bash"},
    {"id": "hook98", "name": "Node.js Security Check", "entry": "nsp check", "language": "node"},
    {"id": "hook99", "name": "Run Custom Shell Script", "entry": "bash my_custom_script.sh", "language": "bash"},
    {"id": "hook100", "name": "Git Commit Message Lint", "entry": "commitlint", "language": "node"}
]

[
    {"id": "hook1", "name": "Check Python Formatting", "entry": "python -m black", "language": "python"},
    {"id": "hook2", "name": "Lint JavaScript", "entry": "eslint .", "language": "node"},
    {"id": "hook3", "name": "Run Tests", "entry": "pytest", "language": "python", "always_run": true},
    {"id": "hook4", "name": "Check for TODOs", "entry": "grep -rnw . -e 'TODO'", "language": "bash", "exclude": ".*.md"},
    {"id": "hook5", "name": "Markdown Linter", "entry": "markdownlint", "language": "ruby", "files": "*.md"},
    {"id": "hook6", "name": "Check JSON Syntax", "entry": "jsonlint", "language": "node", "types": ["json"]},
    {"id": "hook7", "name": "Git Hooks", "entry": "git diff-index --check HEAD", "language": "bash", "types_or": ["gitignore"]},
    {"id": "hook8", "name": "Pylint Check", "entry": "pylint $(git diff --name-only | grep '\.py$')", "language": "python"},
    {"id": "hook9", "name": "Version Check", "entry": "check-version --minimum 2.0", "language": "node"},
    {"id": "hook10", "name": "No Mixed Tabs and Spaces", "entry": "check-tabs --fail", "language": "python"},
    {"id": "hook11", "name": "Run Tests with Coverage", "entry": "pytest --cov", "language": "python", "pass_filenames": false},
    {"id": "hook12", "name": "Shell Check", "entry": "shellcheck", "language": "bash", "files": "*.sh"},
    {"id": "hook13", "name": "Check CSS Validity", "entry": "stylelint", "language": "node", "types": ["css"]},
    {"id": "hook14", "name": "Enforce Code Style", "entry": "prettier --check", "language": "node"},
    {"id": "hook15", "name": "Check for Secrets", "entry": "detect-secrets", "language": "python"},
    {"id": "hook16", "name": "Run ESLint", "entry": "eslint --fix", "language": "node", "always_run": true},
    {"id": "hook17", "name": "Fix Git Commit Message", "entry": "commit-msg-validator", "language": "bash"},
    {"id": "hook18", "name": "Deprecated API Check", "entry": "check-deprecation", "language": "python"},
    {"id": "hook19", "name": "Check for SQL Injection", "entry": "sql-injection-checker", "language": "ruby"},
    {"id": "hook20", "name": "Verify License", "entry": "license-check", "language": "python"},
    {"id": "hook21", "name": "Custom Test Hook", "entry": "custom-test", "language": "python", "always_run": true, "files": "*.py", "fail_fast": false},
    {"id": "hook22", "name": "Check for Large Files", "entry": "check-large-files", "language": "bash"},
    {"id": "hook23", "name": "Format JSON", "entry": "jq .", "language": "bash"},
    {"id": "hook24", "name": "Check Environment Variables", "entry": "envcheck", "language": "bash"},
    {"id": "hook25", "name": "Custom Docker Hook", "entry": "docker-compose up", "language": "docker"},
    {"id": "hook26", "name": "Run Frontend Tests", "entry": "npm test", "language": "node"},
    {"id": "hook27", "name": "Check for Unused Imports", "entry": "unused-imports", "language": "python"},
    {"id": "hook28", "name": "Copy README File", "entry": "cp README.md DIST", "language": "bash"},
    {"id": "hook29", "name": "Check for Duplicate Files", "entry": "duplicate-finder", "language": "bash"},
    {"id": "hook30", "name": "Run Custom Python Script", "entry": "python custom.py", "language": "python", "args": ["--flag"]},
    {"id": "hook31", "name": "Test Hook with Extra Args", "entry": "python script.py", "language": "python", "args": ["--verbose", "--debug"]},
    {"id": "hook32", "name": "Check for Yaml Syntax", "entry": "yamllint", "language": "python", "types": ["yaml"]},
    {"id": "hook33", "name": "Run TypeScript Compiler", "entry": "tsc", "language": "node"},
    {"id": "hook34", "name": "Check for Java Compilation", "entry": "javac *.java", "language": "java"},
    {"id": "hook35", "name": "Run Go Tests", "entry": "go test ./...", "language": "golang"},
    {"id": "hook36", "name": "Check HTML Validation", "entry": "html-validator", "language": "nod"},
    {"id": "hook37", "name": "Check for Mixed Whitespace", "entry": "check-whitespace", "language": "bash"},
    {"id": "hook38", "name": "Check for Extra Trailing Spaces", "entry": "trailing-spaces-checker", "language": "bash"},
    {"id": "hook39", "name": "Check for No Banned Imports", "entry": "banned-import-checker", "language": "python"},
    {"id": "hook40", "name": "License Header Check", "entry": "license-header-check", "language": "bash"},
    {"id": "hook41", "name": "Verify Commit Author", "entry": "verify-author", "language": "bash"},
    {"id": "hook42", "name": "Check for Outdated Dependencies", "entry": "dependency-checker", "language": "node"},
    {"id": "hook43", "name": "Format XML", "entry": "xmllint", "language": "bash"},
    {"id": "hook44", "name": "Custom Test Command", "entry": "run-tests.sh", "language": "bash"},
    {"id": "hook45", "name": "Release Note Generator", "entry": "release-notes-generator", "language": "bash"},
    {"id": "hook46", "name": "Check for Duplicate Lines", "entry": "duplicate-lines-checker", "language": "python"},
    {"id": "hook47", "name": "Run Linting on Changed Files", "entry": "lint-changed-files", "language": "node"},
    {"id": "hook48", "name": "Run Node Security Audit", "entry": "npm audit", "language": "node"},
    {"id": "hook49", "name": "Notify on Warnings", "entry": "notify-warnings", "language": "python"},
    {"id": "hook50", "name": "Run Code Coverage", "entry": "coverage run", "language": "python"},
    {"id": "hook51", "name": "Check PHP Syntax", "entry": "php -l", "language": "php"},
    {"id": "hook52", "name": "Check for Code Complexity", "entry": "complexity-checker", "language": "node"},
    {"id": "hook53", "name": "Generate API Docs", "entry": "api-docs-generator", "language": "python"},
    {"id": "hook54", "name": "Check Image Size", "entry": "image-size-check", "language": "bash"},
    {"id": "hook55", "name": "Validate CSS Properties", "entry": "css-validator", "language": "node"},
    {"id": "hook56", "name": "Check for Missing Tests", "entry": "missing-tests-checker", "language": "python"},
    {"id": "hook57", "name": "Run Integration Tests", "entry": "integration-test-runner", "language": "python"},
    {"id": "hook58", "name": "Validate Git Commit Messages", "entry": "commit-msg-validator", "language": "bash", "types": ["gitignore"]},
    {"id": "hook59", "name": "Lint Python Files", "entry": "pylint", "language": "python", "files": "*.py"},
    {"id": "hook60", "name": "Ensure File Encoding", "entry": "check-encoding", "language": "bash"},
    {"id": "hook61", "name": "Run Frontend Build", "entry": "npm run build", "language": "node", "fail_fast": true},
    {"id": "hook62", "name": "Run Custom Script", "entry": "./custom-script.sh", "language": "bash"},
    {"id": "hook63", "name": "Check Existence of Resources", "entry": "resource-existence-checker", "language": "node"},
    {"id": "hook64", "name": "Check for Circular Dependencies", "entry": "circular-dependency-checker", "language": "python"},
    {"id": "hook65", "name": "Check for Unicode Characters", "entry": "unicode-checker", "language": "bash"},
    {"id": "hook66", "name": "Check for Large Translations", "entry": "large-translations-check", "language": "python"},
    {"id": "hook67", "name": "Run Docker Linter", "entry": "hadolint", "language": "docker"},
    {"id": "hook68", "name": "Check for Performance Issues", "entry": "performance-checker", "language": "python"},
    {"id": "hook69", "name": "Run Security Scans", "entry": "security-scanner", "language": "python"},
    {"id": "hook70", "name": "Check for Outdated Python Packages", "entry": "pip list --outdated", "language": "python"},
    {"id": "hook71", "name": "Dockerfile Validator", "entry": "dockerfile-linter", "language": "docker"},
    {"id": "hook72", "name": "Check Code Duplication", "entry": "duplication-checker", "language": "node"},
    {"id": "hook73", "name": "Check for Broken Links", "entry": "link-checker", "language": "python"},
    {"id": "hook74", "name": "PDF Check", "entry": "pdf-validator", "language": "python"},
    {"id": "hook75", "name": "Check for Invalid HTML Tags", "entry": "html-tag-checker", "language": "python"},
    {"id": "hook76", "name": "Check for Deprecated Code", "entry": "deprecated-code-checker", "language": "python"},
    {"id": "hook77", "name": "Check for Large File Types", "entry": "large-file-checker", "language": "bash"},
    {"id": "hook78", "name": "Run Spell Check", "entry": "spell-check", "language": "ruby"},
    {"id": "hook79", "name": "CSV Syntax Check", "entry": "csvlint", "language": "python"},
    {"id": "hook80", "name": "Check for Environment Variables", "entry": "envvar-checker", "language": "bash"},
    {"id": "hook81", "name": "Check for Unused Styles", "entry": "unused-css-checker", "language": "node"},
    {"id": "hook82", "name": "Validate XML Schema", "entry": "xsd-validator", "language": "bash"},
    {"id": "hook83", "name": "Run E2E Tests", "entry": "cypress run", "language": "node"},
    {"id": "hook84", "name": "Check for Plagiarism", "entry": "plagiarism-checker", "language": "python"},
    {"id": "hook85", "name": "Ensure All Tests Pass", "entry": "test-checker", "language": "python"},
    {"id": "hook86", "name": "Check for Package Updates", "entry": "npm outdated", "language": "node"},
    {"id": "hook87", "name": "Run Shell Unit Tests", "entry": "shunit2", "language": "bash"},
    {"id": "hook88", "name": "Check for Mixed Content Policy", "entry": "content-policy-checker", "language": "bash"},
    {"id": "hook89", "name": "CSS Units Validator", "entry": "css-units-checker", "language": "node"},
    {"id": "hook90", "name": "Check for Invalid Date Formats", "entry": "date-format-checker", "language": "python"},
    {"id": "hook91", "name": "Check for Controlled Dependencies", "entry": "dependency-policy-checker", "language": "bash"},
    {"id": "hook92", "name": "Check for Large Translations", "entry": "large-translations-checker", "language": "python"},
    {"id": "hook93", "name": "Run Accessibility Tests", "entry": "axe", "language": "node"},
    {"id": "hook94", "name": "Markdown Linter with Different Language", "entry": "markdownlint --config .markdownlint.json", "language": "ruby", "types": ["markdown"]},
    {"id": "hook95", "name": "Type Definition Validator", "entry": "tsc --noEmit", "language": "ts"},
    {"id": "hook96", "name": "PDF Validator", "entry": "pdf-validate", "language": "python"},
    {"id": "hook97", "name": "Check for Non-ASCII Characters", "entry": "non-ascii-checker", "language": "bash"},
    {"id": "hook98", "name": "Run ESLint on Staged Files", "entry": "eslint --cache --fix", "language": "node", "pass_filenames": false},
    {"id": "hook99", "name": "Check for Security Headers", "entry": "security-header-checker", "language": "python"},
    {"id": "hook100", "name": "Running All Hooks", "entry": "run-all-hooks", "language": "bash"}
]

[
    {"id":"hook1","name":"Python Formatter","entry":"autopep8 --in-place","language":"python","types":["python"]},
    {"id":"hook2","name":"JavaScript Linter","entry":"eslint","language":"node","always_run":true},
    {"id":"hook3","name":"Dockerfile Linter","entry":"hadolint","language":"docker","types":["dockerfile"]},
    {"id":"hook4","name":"C++ Build Checker","entry":"make","language":"c++","pass_filenames":false},
    {"id":"hook5","name":"Markdown Linter","entry":"markdownlint","language":"ruby","types_or":["markdown","txt"]},
    {"id":"hook6","name":"PHP Syntax Checker","entry":"php -l","language":"php","fail_fast":true},
    {"id":"hook7","name":"Prettier Formatter","entry":"prettier --write","language":"node","args":["--single-quote"]},
    {"id":"hook8","name":"Custom Script","entry":"./custom-script.sh","language":"script","pass_filenames":false,"always_run":true},
    {"id":"hook9","name":"YAML Validator","entry":"yamllint","language":"python","types":["yaml"]},
    {"id":"hook10","name":"Git Lint","entry":"gitlint","language":"python","args":["--config","path/to/config"]},
    {"id":"hook11","name":"Rust Formatter","entry":"rustfmt","language":"rust","types":["rust"]},
    {"id":"hook12","name":"Python Unit Tests","entry":"pytest","language":"python","stages":["commit","push"]},
    {"id":"hook13","name":"Swift Build Checker","entry":"swift build","language":"swift","minimum_pre_commit_version":"2"},
    {"id":"hook14","name":"Node.js Test Runner","entry":"npm test","language":"node","fail_fast":false},
    {"id":"hook15","name":"Gemfile Checker","entry":"bundler-audit check","language":"ruby","stages":["commit","manual"]},
    {"id":"hook16","name":"Haskell Linter","entry":"hlint .","language":"haskell","verbose":true},
    {"id":"hook17","name":"Go Syntax Checker","entry":"go vet ./...","language":"golang"},
    {"id":"hook18","name":"Custom Argument Hook","entry":"run-scripts.sh arg1 arg2","language":"script","pass_filenames":false},
    {"id":"hook19","name":"Latex Compiler","entry":"pdflatex","language":"script","types":["tex"]},
    {"id":"hook20","name":"Bash Script","entry":"bash script.sh","language":"bash","args":["--verbose"]},
    {"id":"hook21","name":"Node Version Checker","entry":"nvm install default","language":"node","fail_fast":false,"pass_filenames":false},
    {"id":"hook22","name":"Docker Image Build","entry":"docker build -t myimage .","language":"docker"},
    {"id":"hook23","name":"XML Linter","entry":"xmllint --noout","language":"python","types":["xml"]},
    {"id":"hook24","name":"Java Compiler","entry":"javac","language":"java","args":["-Xlint"]},
    {"id":"hook25","name":"Image Optimization","entry":"imagemin **/*.png","language":"node","types":["png"]},
    {"id":"hook26","name":"Git Clean Up","entry":"git clean -fd","language":"bash","stages":["post-commit"]},
    {"id":"hook27","name":"Terraform Validator","entry":"terraform validate","language":"terraform","types":["tf"]},
    {"id":"hook28","name":"ShellCheck","entry":"shellcheck *.sh","language":"bash","args":["--quiet"]},
    {"id":"hook29","name":"Rust Clippy","entry":"cargo clippy","language":"rust"},
    {"id":"hook30","name":"Package.json Validator","entry":"jsonschema -i package.json schema.json","language":"node"},
    {"id":"hook31","name":"Toy Script","entry":"toyscript","language":"script","fail_fast":true},
    {"id":"hook32","name":"Python Type Checker","entry":"mypy","language":"python","types_or":["py"]},
    {"id":"hook33","name":"C# Compiler","entry":"dotnet build","language":"dotnet","minimum_pre_commit_version":"1"},
    {"id":"hook34","name":"JSON Linter","entry":"jsonlint .","language":"node","types":["json"]},
    {"id":"hook35","name":"Ruby Style Checker","entry":"rubocop","language":"ruby","args":["--config","rubocop.yml"]},
    {"id":"hook36","name":"GraphQL Validator","entry":"graphql-schema lint","language":"node","types_or":["graphql"]},
    {"id":"hook37","name":"Docker-Compose Validator","entry":"docker-compose config","language":"docker","types":["yml"]},
    {"id":"hook38","name":"Text Formatter","entry":"fmt","language":"script","args":["-w","80"]},
    {"id":"hook39","name":"PHP Formatter","entry":"php-cs-fixer fix .","language":"php","types":["php"]},
    {"id":"hook40","name":"R Check","entry":"Rscript -e 'library(check)}'","language":"r","types_or":["R"]},
    {"id":"hook41","name":"Minimal Hook","entry":"echo","language":"bash"},
    {"id":"hook42","name":"Empty Hook","entry":"","language":"python","pass_filenames":true},
    {"id":"hook43","name":"Verbose Hook","entry":"echo 'Verbose!'", "language":"bash","verbose":false},
    {"id":"hook44","name":"Go Mod Tidy","entry":"go mod tidy","language":"golang"},
    {"id":"hook45","name":"Markdown Formatter","entry":"prettier --write Markdown","language":"python","types":["md"]},
    {"id":"hook46","name":"Quota Checker","entry":"quota -s","language":"bash","types":["txt"]},
    {"id":"hook47","name":"Error Handler Hook","entry":"wrong-command","language":"bash","fail_fast":true},
    {"id":"hook48","name":"System Verilog Compile","entry":"vcs","language":"system-verilog","args":["-g"]},
    {"id":"hook49","name":"PHP Dependencies Checker","entry":"composer validate","language":"php","types_or":["php"]},
    {"id":"hook50","name":"Python Import Check","entry":"flake8 --select=F401","language":"python"},
    {"id":"hook51","name":"Swift Compilation Check","entry":"swift build","language":"swift","args":["--configuration","release"]},
    {"id":"hook52","name":"Jupyter Notebook Linter","entry":"nbformat validate","language":"python","types":["ipynb"]},
    {"id":"hook53","name":"Commented Hook","entry":"echo 'This is a hook'","language":"bash","args":["--quiet"]},
    {"id":"hook54","name":"Pre-install Hook","entry":"npx install-peers","language":"javascript'},
    {"id":"hook55","name":"Post-checkout Hook","entry":"echo 'Post checkout action'","language":"bash","stages":["post-checkout"]},
    {"id":"hook56","name":"RMarkdown Validator","entry":"Rscript -e 'rmarkdown::render()'","language":"r","types":["rmd"]},
    {"id":"hook57","name":"Year End Archive Hook","entry":"tar -cvf year-end.tar *","language":"bash"},
    {"id":"hook58","name":"JSON Validator","entry":"ajv validate -s schema.json -d data.json","language":"node","types":["json"]},
    {"id":"hook59","name":"Secret Checker Hook","entry":"trufflehog","language":"go","types_or":["secret"]},
    {"id":"hook60","name":"Network Checker Hook","entry":"ping -c 5 google.com","language":"bash"},
    {"id":"hook61","name":"Python Lint (All)","entry":"pylint**/*.py","language":"python","stages":["commit"]},
    {"id":"hook62","name":"RScripts Hook","entry":"Rscript script.R","language":"r"},
    {"id":"hook63","name":"Python Packages Check","entry":"pip list","language":"python","pass_filenames":false},
    {"id":"hook64","name":"Style Guide Hook","entry":"stylelint '**/*.css'","language":"node","args":["--quiet"]},
    {"id":"hook65","name":"Docker Image Cleanup","entry":"docker rmi -f $(docker images -q)","language":"docker"},
    {"id":"hook66","name":"Git Push Limit Check","entry":"git push | awk 'NR==1{if($0 == \"To <some-git-url>\") exit 0; exit 1}'","language":"bash"},
    {"id":"hook67","name":"File Size Checker","entry":"find . -size +10M","language":"bash"},
    {"id":"hook68","name":"Error Handler Hook 2","entry":"non_existing_command","language":"bash","fail_fast":true},
    {"id":"hook69","name":"Swift Linter","entry":"swiftlint","language":"swift","types":["swift"]},
    {"id":"hook70","name":"Test Coverage Checker","entry":"coveralls","language":"python"},
    {"id":"hook71","name":"Environment Variable Checker","entry":"echo $ENV_VAR","language":"bash"},
    {"id":"hook72","name":"Install Run Hook","entry":"npm install -g package-name","language":"node","stages":["pre-commit"]},
    {"id":"hook73","name":"Install Peer Dependencies Hook","entry":"npx install-peers","language":"node"},
    {"id":"hook74","name":"Custom Command Hook","entry":"my_custom_script","language":"bash"},
    {"id":"hook75","name":"Check for Locked Files","entry":"lsof | grep locked","language":"bash"},
    {"id":"hook76","name":"Download Test Data","entry":"curl -OL data.json","language":"bash"},
    {"id":"hook77","name":"Python Upgrade Package Hook","entry":"pip install --upgrade package-name","language":"python"},
    {"id":"hook78","name":"File Copy Hook","entry":"cp source destination","language":"bash"},
    {"id":"hook79","name":"App Version Reg Check Hook","entry":"cat version.txt | grep 'latest'","language":"bash"},
    {"id":"hook80","name":"Node Version Reg Check Hook","entry":"nvm ls-remote","language":"node"},
    {"id":"hook81","name":"Safe Write Hook","entry":"touch file","language":"bash"},
    {"id":"hook82","name":"R Check","entry":"Rscript script.R","language":"r"},
    {"id":"hook83","name":"Format All Hook","entry":"yapf --in-place --recursive .","language":"python"},
    {"id":"hook84","name":"HTML Validator Hook","entry":"htmlhint .","language":"node","types":["html"]},
    {"id":"hook85","name":"File Rename Hook","entry":"mv old.txt new.txt","language":"bash"},
    {"id":"hook86","name":"Check Module Version Hook","entry":"pip show package-name","language":"python"},
    {"id":"hook87","name":"File Owner Check Hook","entry":"ls -l file.txt","language":"bash"},
    {"id":"hook88","name":"Python Setup Upgrade Hook","entry":"pip install --upgrade setuptools","language":"python"},
    {"id":"hook89","name":"Custom Output Hook","entry":"echo 'Custom Output'","language":"bash"},
    {"id":"hook90","name":"Legal File Hook","entry":"grep 'legal' legal.txt","language":"bash"},
    {"id":"hook91","name":"File Check Hook","entry":"test -f file.txt","language":"bash"},
    {"id":"hook92","name":"Not found Command Hook","entry":"non_existent_program","language":"bash"},
    {"id":"hook93","name":"Temporary File Hook","entry":"touch /tmp/tempfile","language":"bash"},
    {"id":"hook94","name":"Version Control Hook","entry":"git rev-parse HEAD","language":"bash"},
    {"id":"hook95","name":"Open Command Hook","entry":"open .","language":"bash"},
    {"id":"hook96","name":"Generate PDF Hook","entry":"pdflatex document.tex","language":"script","types":["tex"]},
    {"id":"hook97","name":"Backup Files Hook","entry":"cp -r data data_backup","language":"bash"},
    {"id":"hook98","name":"JSON Schema Validate Hook","entry":"ajv validate","language":"node","args":["--schema"]},
    {"id":"hook99","name":"Compile Java Hook","entry":"javac Main.java","language":"java"},
    {"id":"hook100","name":"Run JS Hook","entry":"node script.js","language":"node"}
]

[
    {"id": "hook1", "name": "Prettier", "entry": "prettier", "language": "node"},
    {"id": "hook2", "name": "pylint", "entry": "pylint", "language": "python", "always_run": true},
    {"id": "hook3", "name": "black", "entry": "black .", "language": "python", "files": "*.py", "verbose": true},
    {"id": "hook4", "name": "eslint", "entry": "eslint --fix", "language": "node", "stages": ["commit", "push"]},
    {"id": "hook5", "name": "flake8", "entry": "flake8", "language": "python", "types": ["python"]},
    {"id": "hook6", "name": "htmlhint", "entry": "htmlhint", "language": "node", "files": "*.html"},
    {"id": "hook7", "name": "rubocop", "entry": "rubocop", "language": "ruby", "pass_filenames": false},
    {"id": "hook8", "name": "shellcheck", "entry": "shellcheck", "language": "bash"},
    {"id": "hook9", "name": "dockerlint", "entry": "dockerlint", "language": "docker"},
    {"id": "hook10", "name": "cppcheck", "entry": "cppcheck", "language": "c++", "args": ["--enable=all"]},
    {"id": "hook11", "name": "markdownlint", "entry": "markdownlint", "language": "node", "exclude": "*.md"},
    {"id": "hook12", "name": "xmlstarlet", "entry": "xmlstarlet", "language": "bash", "files": "*.xml"},
    {"id": "hook13", "name": "go vet", "entry": "go vet", "language": "golang", "types": ["go"]},
    {"id": "hook14", "name": "yaml-lint", "entry": "yamllint", "language": "python", "files": "*.yaml"},
    {"id": "hook15", "name": "tflint", "entry": "tflint", "language": "go", "types": ["terraform"]},
    {"id": "hook16", "name": "prettierignore", "entry": "npx prettier --ignore-unknown", "language": "node"},
    {"id": "hook17", "name": "stylelint", "entry": "stylelint", "language": "node", "verbose": false},
    {"id": "hook18", "name": "eslint", "entry": "eslint", "language": "javascript", "types_or": ["javascript", "jsx"]},
    {"id": "hook19", "name": "cssnano", "entry": "cssnano", "language": "node", "args": ["input.css", "output.css"]},
    {"id": "hook20", "name": "jsonlint", "entry": "jsonlint", "language": "node", "files": "*.json"},
    {"id": "hook21", "name": "raku linter", "entry": "raku-linter", "language": "perl"},
    {"id": "hook22", "name": "gofmt", "entry": "gofmt", "language": "golang", "exclude": "*.md"},
    {"id": "hook23", "name": "clippy", "entry": "cargo clippy", "language": "rust"},
    {"id": "hook24", "name": "pytest", "entry": "pytest", "language": "python", "types": ["python"]},
    {"id": "hook25", "name": "npm audit", "entry": "npm audit", "language": "node"},
    {"id": "hook26", "name": "pre-commit auto-fix", "entry": "pre-commit autoupdate", "language": "python"},
    {"id": "hook27", "name": "gslint", "entry": "gslint", "language": "javascript"},
    {"id": "hook28", "name": "phpcs", "entry": "phpcs", "language": "php", "files": "*.php"},
    {"id": "hook29", "name": "dotnet format", "entry": "dotnet format", "language": "dotnet"},
    {"id": "hook30", "name": "stylelint", "entry": "stylelint", "language": "scss"},
    {"id": "hook31", "name": "prettier", "entry": "prettier --check", "language": "node"},
    {"id": "hook32", "name": "shellcheck", "entry": "shellcheck", "language": "bash"},
    {"id": "hook33", "name": "terraform validate", "entry": "terraform validate", "language": "terraform"},
    {"id": "hook34", "name": "puppet-lint", "entry": "puppet-lint", "language": "puppet"},
    {"id": "hook35", "name": "hx-lint", "entry": "hx-lint", "language": "haxe"},
    {"id": "hook36", "name": "julia", "entry": "julia", "language": "julia"},
    {"id": "hook37", "name": "realpath", "entry": "realpath", "language": "shell"},
    {"id": "hook38", "name": "astro build", "entry": "astro build", "language": "node"},
    {"id": "hook39", "name": "eslint", "entry": "eslint .", "language": "javascript"},
    {"id": "hook40", "name": "security check", "entry": "nsp check", "language": "node"},
    {"id": "hook41", "name": "flask db migrate", "entry": "flask db migrate", "language": "python"},
    {"id": "hook42", "name": "cargo build", "entry": "cargo build", "language": "rust"},
    {"id": "hook43", "name": "jar validate", "entry": "jar -tf", "language": "java"},
    {"id": "hook44", "name": "R CMD check", "entry": "R CMD check", "language": "r"},
    {"id": "hook45", "name": "c\*\*check", "entry": "c\*\*check", "language": "c++"},
    {"id": "hook46", "name": "npm lint", "entry": "npm run lint", "language": "node"},
    {"id": "hook47", "name": "commitizen", "entry": "git cz", "language": "node"},
    {"id": "hook48", "name": "dep ensure", "entry": "dep ensure", "language": "golang"},
    {"id": "hook49", "name": "ktlint", "entry": "ktlint", "language": "kotlin"},
    {"id": "hook50", "name": "pytype", "entry": "pytype", "language": "python"},
    {"id": "hook51", "name": "gometalinter", "entry": "gometalinter", "language": "golang"},
    {"id": "hook52", "name": "ghostwriter", "entry": "ghostwriter", "language": "node"},
    {"id": "hook53", "name": "jsonschema", "entry": "jsonschema", "language": "python"},
    {"id": "hook54", "name": "bats", "entry": "bats", "language": "bash"},
    {"id": "hook55", "name": "fortify", "entry": "fortify-checkmarx", "language": "java"},
    {"id": "hook56", "name": "proselint", "entry": "proselint", "language": "python"},
    {"id": "hook57", "name": "phpunit", "entry": "phpunit", "language": "php"},
    {"id": "hook58", "name": "nodemon", "entry": "nodemon", "language": "node"},
    {"id": "hook59", "name": "pytest", "entry": "pytest tests", "language": "python"},
    {"id": "hook60", "name": "lit", "entry": "lit tests", "language": "ruby"},
    {"id": "hook61", "name": "ts-node", "entry": "ts-node", "language": "typescript"},
    {"id": "hook62", "name": "checkstyle", "entry": "checkstyle", "language": "java"},
    {"id": "hook63", "name": "missing dependencies", "entry": "npm install", "language": "node"},
    {"id": "hook64", "name": "winston", "entry": "winston logger", "language": "node"},
    {"id": "hook65", "name": "pydocstyle", "entry": "pydocstyle", "language": "python"},
    {"id": "hook66", "name": "dotnet test", "entry": "dotnet test", "language": "dotnet"},
    {"id": "hook67", "name": "rake", "entry": "rake test", "language": "ruby"},
    {"id": "hook68", "name": "build", "entry": "build.sh", "language": "bash"},
    {"id": "hook69", "name": "terraform plan", "entry": "terraform plan", "language": "terraform"},
    {"id": "hook70", "name": "webpack", "entry": "webpack", "language": "javascript"},
    {"id": "hook71", "name": "tsc", "entry": "tsc", "language": "typescript"},
    {"id": "hook72", "name": "gitlint", "entry": "gitlint", "language": "python"},
    {"id": "hook73", "name": "lambda-test", "entry": "lambda-test", "language": "python"},
    {"id": "hook74", "name": "cloc", "entry": "cloc", "language": "perl"},
    {"id": "hook75", "name": "stylelint", "entry": "stylelint styles/**/*.{css,scss}", "language": "node"},
    {"id": "hook76", "name": "cfn-lint", "entry": "cfn-lint", "language": "python"},
    {"id": "hook77", "name": "pylint", "entry": "pylint --fail-under=9.0", "language": "python"},
    {"id": "hook78", "name": "i18next", "entry": "i18next", "language": "javascript"},
    {"id": "hook79", "name": "remove unused imports", "entry": "npm run remove-unused-imports", "language": "javascript"},
    {"id": "hook80", "name": "fuzzy", "entry": "fuzzy", "language": "python"},
    {"id": "hook81", "name": "devtrace", "entry": "devtrace", "language": "node"},
    {"id": "hook82", "name": "lighthouse", "entry": "lighthouse", "language": "node"},
    {"id": "hook83", "name": "yarn audit", "entry": "yarn audit", "language": "node"},
    {"id": "hook84", "name": "pip check", "entry": "pip check", "language": "python"},
    {"id": "hook85", "name": "markdown lint", "entry": "markdownlint", "language": "node"},
    {"id": "hook86", "name": "findbugs", "entry": "findbugs", "language": "java"},
    {"id": "hook87", "name": "bundle exec rubocop", "entry": "bundle exec rubocop", "language": "ruby"},
    {"id": "hook88", "name": "verify installation", "entry": "verify.sh", "language": "bash"},
    {"id": "hook89", "name": "composer validate", "entry": "composer validate", "language": "php"},
    {"id": "hook90", "name": "handlebars", "entry": "handlebars", "language": "javascript"},
    {"id": "hook91", "name": "npm outdated", "entry": "npm outdated", "language": "node"},
    {"id": "hook92", "name": "csslint", "entry": "csslint", "language": "javascript"},
    {"id": "hook93", "name": "haskell lint", "entry": "hlint", "language": "haskell"},
    {"id": "hook94", "name": "rustfmt", "entry": "rustfmt", "language": "rust"},
    {"id": "hook95", "name": "npm run build", "entry": "npm run build", "language": "node"},
    {"id": "hook96", "name": "doxygen", "entry": "doxygen", "language": "c++"},
    {"id": "hook97", "name": "htmllint", "entry": "htmllint", "language": "ruby"},
    {"id": "hook98", "name": "theme check", "entry": "theme-check", "language": "ruby"},
    {"id": "hook99", "name": "danger", "entry": "danger", "language": "ruby"},
    {"id": "hook100", "name": "npm run test", "entry": "npm run test", "language": "node"}
]
